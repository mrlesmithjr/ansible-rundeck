---
- name: config_rundeck | configuring rundeck
  template:
    src: "{{ 'etc/rundeck/' + item + '.j2' }}"
    dest: "{{ rundeck_root_dir + '/' + item }}"
    owner: rundeck
    group: rundeck
  become: true
  notify: restart rundeck
  loop: "{{ rundeck_configs }}"
  when: rundeck_config_rundeck

- name: config_rundeck | configuring authentication
  template:
    src: etc/rundeck/jaas-auth.conf.j2
    dest: "{{ rundeck_root_dir + '/jaas-auth.conf' }}"
    owner: rundeck
    group: rundeck
    mode: 0640
  become: true
  notify: restart rundeck
  when: rundeck_auth_ldap_config

- name: config_rundeck | generate user password hashes for PropertyFileLoginModule
  shell: echo -n {{ item.password }} | md5sum | cut -d' ' -f1
  register: rundeck_userhashes
  become: true
  changed_when: false
  loop: "{{ rundeck_users }}"
  when: rundeck_users

- name: config_rundeck | add users to realm.properties
  lineinfile:
    dest: "{{ rundeck_root_dir + '/realm.properties' }}"
    regexp: "^{{ item.item.name }}"
    line: "{{ item.item.name }}: MD5:{{ item.stdout }},{{ item.item.roles }}"
    state: "{{ item.item.state | default('present') }}"
  become: true
  with_items: "{{ rundeck_userhashes.results }}"
  when: rundeck_userhashes|success
  notify: restart rundeck

- name: config_rundeck | deploy static authentication tokens file
  template:
    src: etc/rundeck/tokens.properties.j2
    dest: "{{ rundeck_framework_tokens_path + '/' + rundeck_framework_tokens_file }}"
    owner: rundeck
    group: rundeck
    mode: 0640
  become: true
  notify: restart rundeck
  when: rundeck_framework_tokens != []

- name: config_rundeck | deploy acl files
  template:
    src: etc/rundeck/custom_acls.aclpolicy.j2
    dest: "{{ rundeck_root_dir }}/{{ item.filename | default('custom_acls') }}.aclpolicy"
    owner: "{{ item.owner | default('rundeck') }}"
    group: "{{ item.group | default('rundeck') }}"
    mode: "{{ item.mode | default('0640') }}"
  become: true
  loop: "{{ rundeck_aclfiles }}"
